/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TavernPanel.java
 *
 * Created on 2.4.2009, 13:05:32
 */

package com.ukkosnetti.gladius.gui;

import java.awt.Color;

import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

import com.ukkosnetti.gladius.controller.Controller;
import com.ukkosnetti.gladius.gui.components.GradientPanel;
import com.ukkosnetti.gladius.gui.components.RedButton;

/**
 *
 * @author Humakt83
 */
public class TavernPanel extends GradientPanel {
	/**
	 * 
	 */
	private static final long serialVersionUID = 8408622037381337425L;

	/** Creates new form TavernPanel */
	public TavernPanel() {
		initComponents();
	}

	public void setController(Controller c) {
		TavernLeave.setActionCommand("TAVERN_LEAVE");
		TavernHire.setActionCommand("TAVERN_HIRE");
		TavernHire.addActionListener(c);
		TavernLeave.addActionListener(c);
		TavernGladiators.addMouseListener(c);
	}

	public void setRow() {
		TavernGladiators.setRowSelectionInterval(0, 0);
	}

	public JTable getTable() {
		return TavernGladiators;
	}

	public void setGladiators(String[] name, String[] race, int[] price) {
		int rc = TavernGladiators.getRowCount();
		DefaultTableModel dtm = (DefaultTableModel) TavernGladiators.getModel();
		for (int i = rc - 1; i >= 0; i--)
			dtm.removeRow(i);
		for (int x = 0; x < name.length; x++) {
			String[] t = new String[3];
			t[0] = name[x];
			t[1] = race[x];
			t[2] = "" + price[x];
			dtm.addRow(t);
			/*
			 * TavernGladiators.getModel().setValueAt(name[x], x, 0);
			 * TavernGladiators.getModel().setValueAt(race[x], x, 1);
			 * TavernGladiators.getModel().setValueAt(price[x], x, 2);
			 */
		}
		TavernGladiators.revalidate();
		jScrollPane1.updateUI();

	}

	public String getSelectedGladiator() {
		int row = TavernGladiators.getSelectedRow();
		return (String) TavernGladiators.getModel().getValueAt(row, 0);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		TavernGladiators = new javax.swing.JTable();
		TavernHire = new RedButton();
		TavernLeave = new RedButton();
		jLabel1.setFont(new java.awt.Font("Magneto", 1, 24)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(255, 255, 255));
		jLabel1.setText("Gladiators for hire");

		// TavernGladiators.setAutoCreateRowSorter(true);
		TavernGladiators.setBackground(new java.awt.Color(255, 51, 0));
		TavernGladiators.setForeground(new java.awt.Color(255, 255, 255));
		TavernGladiators.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null },
				{ null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null },
				{ null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null } }, new String[] { "Name",
				"Race", "Price" }) {
			/**
			 * 
			 */
			private static final long serialVersionUID = 935078986400198960L;
			boolean[] canEdit = new boolean[] { false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(TavernGladiators);

		TavernHire.setBackground(new java.awt.Color(255, 0, 0));
		TavernHire.setText("HIRE");
		TavernHire.setName("TavernHire"); // NOI18N

		TavernLeave.setBackground(new java.awt.Color(255, 51, 51));
		TavernLeave.setText("LEAVE");
		TavernLeave.setName("TavernLeave"); // NOI18N

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup().addContainerGap(71, Short.MAX_VALUE).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(47, 47, 47))
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup().addGap(66, 66, 66).addComponent(TavernHire).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
								.addComponent(TavernLeave).addGap(94, 94, 94))
				.addGroup(
						layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(20, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(TavernLeave).addComponent(TavernHire)).addGap(27, 27, 27)));
		TavernGladiators.getTableHeader().setBackground(Color.YELLOW);
		TavernGladiators.getTableHeader().setForeground(Color.BLACK);
		TavernLeave.setForeground(Color.WHITE);
		TavernHire.setForeground(Color.WHITE);
		TavernGladiators.setSelectionBackground(Color.WHITE);
		TavernGladiators.setSelectionForeground(Color.RED);
		TavernGladiators.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		// TavernGladiators.setUpdateSelectionOnSort(true);
		TavernGladiators.getTableHeader().setReorderingAllowed(false);
		jScrollPane1.setBackground(Color.RED);
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTable TavernGladiators;
	private javax.swing.JButton TavernHire;
	private javax.swing.JButton TavernLeave;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables

}
